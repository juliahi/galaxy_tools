<tool id="new_count_for_deseq" name="Count reads (new version)" version="1.0">
<requirements>
    <requirement type="python-module">pysam</requirement>
</requirements>

<description>Counts paired-end reads mapped to genes/introns/exons on specific strand (before DESeq)</description>
  <command interpreter="bash"> 

#if $bams.strand=="."
  count_for_deseq2.sh $annotation $output 
  \${GALAXY_SLOTS:-4} 

  -b 
  #for $b in $bams.treated_bams
    "${b.tbam_filep.file_name}"
    "${b.tbam_filep.metadata.bam_index}"
    "${b.tbam_filem.file_name}"
    "${b.tbam_filem.metadata.bam_index}"
    #if str($b['fname']) == ""
      'data ${b.tbam_filep.hid} and ${b.tbam_filem.hid}'
    #else
      "${b.fname}"
    #end if
  #end for

  -u 
  #for $b in $bams.untreated_bams
    "${b.ubam_filep.file_name}"
    "${b.ubam_filep.metadata.bam_index}"
    "${b.ubam_filem.file_name}"
    "${b.ubam_filem.metadata.bam_index}"
    #if str($b['fname']) == ""
      'data ${b.ubam_filep.hid} and ${b.ubam_filem.hid}'
    #else
      "${b.fname}"
    #end if
  #end for
#end if

#if $bams.strand=="+" or $bams.strand=="-"
  count_for_deseq.sh $annotation $output 
  \${GALAXY_SLOTS:-4} $bams.strand
  
  -b 
  #for $b in $bams.treated_bams
    "${b.tbam_file.file_name}"
    "${b.tbam_file.metadata.bam_index}"
    #if str($b['fname']) == ""
      'data ${b.tbam_file.hid}'
    #else
      "${b.fname}"
    #end if
  #end for
  #for $b in $bams.untreated_bams
    "${b.ubam_file.file_name}"
    "${b.ubam_file.metadata.bam_index}"
    #if str($b['fname']) == ""
      'data ${b.ubam_file.hid}'
    #else
      "${b.fname}"
    #end if
  #end for
#end if

-f ${block.counting}
#if $block.counting=="genes"	
	-i ${block.include}
	<!-- #if $block.counting$onlyintrons=="-oi"
	-i "introns"
	#elif $block.counting$introns=="-i"
	-i "all"
	#else
	-i "exons"
	#end if-->
#end if

</command>
  <inputs>
    <conditional name="bams">
      <param name="strand" type="select" label="Choose strand">
        <option value="." selected="true">both</option>
        <option value="+">plus (Watson)</option>
        <option value="-">minus (Crick)</option>
      </param>

      <when value="."> 
          <repeat name="treated_bams" title="Input TREATED bam files" min="0" default="0">
              <param name="tbam_filep" label="Input bam file - plus reads" format="bam" type="data" data_ref="bam_file"  />
              <param name="tbam_filem" label="Input bam file - minus reads" format="bam" type="data" data_ref="bam_file" />
              <param name="fname" label="Track name" type="text"/>
          </repeat>
          <repeat name="untreated_bams" title="Input UNTREATED bam files" min="0" default="0">
              <param name="ubam_filep" label="Input bam file - plus reads" format="bam" type="data" data_ref="bam_file"  />
              <param name="ubam_filem" label="Input bam file - minus reads" format="bam" type="data" data_ref="bam_file" />
              <param name="fname" label="Track name" type="text"/>
          </repeat>
     </when>

     <when value="+">
         <repeat name="treated_bams" title="Input TREATED bam files" min="0" default="0">
             <param name="tbam_file" label="Input bam file" format="bam" type="data" data_ref="bam_file"  />
             <param name="fname" label="Track name" type="text"/>
         </repeat>
         <repeat name="untreated_bams" title="Input UNTREATED bam files" min="0" default="0">
             <param name="ubam_file" label="Input bam file" format="bam" type="data" data_ref="bam_file"  />
             <param name="fname" label="Track name" type="text"/>
         </repeat>
    </when> 
    <when value="-">
         <repeat name="treated_bams" title="Input TREATED bam files" min="0" default="0">
             <param name="tbam_file" label="Input bam file" format="bam" type="data" data_ref="bam_file"  />
             <param name="fname" label="Track name" type="text"/>
         </repeat>
         <repeat name="untreated_bams" title="Input UNTREATED bam files" min="0" default="0">
             <param name="ubam_file" label="Input bam file" format="bam" type="data" data_ref="bam_file"  />
             <param name="fname" label="Track name" type="text"/>
         </repeat>
    </when> 
    </conditional>
    <param format="tabular" name="annotation" type="data" optional="false" label="Genome or region annotation"/>
    <conditional name="block">
        <param name="counting" type="select" label="Count hits for:">
            <option value="genes" selected="true">Genes (all transcripts of that gene aggregated)</option>
            <option value="transcripts">Transcripts</option>    
            <option value="exons">Gene exons (separatelly)</option>
            <option value="introns">Gene introns (separatelly)</option>
        </param>
            <when value="genes">   
		<param name="include" type="select" label="Include only reads overlaping:">
            		<option value="exons" selected="true">any exon</option>
            		<option value="introns">any intron</option>
            		<option value="all">any exon or intron (region from gene start to end)</option>
        	</param> 
		<!--<param name="introns" type="boolean" truevalue="-i" falsevalue="" label="include reads mapped to introns (but not exons)" />
		<when value="-i">
			<param name="onlyintrons" type="boolean" truevalue="-oi" falsevalue="" label="include ONLY reads mapped to introns" />
		</when>-->
            </when>
    </conditional>
    
  </inputs>
  <outputs>
        <data format="tabular" name="output" label="${tool.name} on ${on_string}"/>
  </outputs>

  <tests>
  </tests>

  <help>
Count reads mapped to gene exons, transcripts, genes or introns. Count both reads from paired-end sequencing as one hit.
One can choose to count reads mapped to gene if they overlap any exon, any intron, or whole gene (any point from start to end).


Requires annotation in format: 

    transcript_id	chromosome	strand	start	end	exon_starts	exon_ends	human_readable_gene_name	gene_id (optional)

Coordinates are 0-based, half-inclusive (=endpoint is EXCLUSIVE!).

Returned file is sorted according to gene ids (or transcript ids) (for both strands first genes on forward strand, then all on reverse strand). 

-----

Author: Julia
  </help>

</tool>

